#0.0.5

#[/usr/share/cairo-dock/icons/icon-icons.svg]
[Icon]

#F[Icon]
frame_maininfo=

#d Name of the dock it belongs to:
dock name=

#s[Default] Name of the icon as it will appear in its caption in the dock:
name=

#v
sep_display=

#S+[Default] Image filename:
#{Let empty to use the default one.}
icon=

#j+[0;128] Desired icon size for this applet
#{Set to 0 to use the default applet size}
icon size=0;0;

order=


#F[Cairo-Dock Update;help-browser]
frame_launchpad=

#W[Module Documentation] How-to use this module.
link branch=http://glx-dock.org/ww_page.php?p=Update&lang=en

#W[Git Forum] Report and help fix your problems with the development version.
link git forum=http://glx-dock.org/bg_forum.php?f=12

#W[Core Launchpad page] Core source repository
link core=https://github.com/Cairo-Dock/cairo-dock-core

#W[Plug-Ins Launchpad page] Plug-Ins source repository
link plug-ins=https://github.com/Cairo-Dock/cairo-dock-plug-ins


#A
handbook=Update


#[/usr/share/cairo-dock/icons/icon-desklets.svg]
[Desklet]

#F[Desklet mode]
frame_desk=

#b Is detached from the dock
initially detached=false

#j+[48;512] Desklet dimensions (width x height):
#{Depending on your WindowManager, you may be able to resize this with ALT + middle-click or ALT + left-click.}
size=96;96;

#l[Normal;Keep above;Keep below;Keep on widget layer;Reserve space] Visibility:
accessibility=0

#b Should be visible on all desktops?
sticky=true


#F[Position;view-fullscreen]
frame_pos=

#b Lock position?
#{If locked, the desklet cannot be moved by simply dragging it with the left mouse button. It can still be moved with ALT + left-click.}
locked=false


#i[-2048;2048] Desklet position (x, y):
#{Depending on your WindowManager, you may be able to move this with ALT + left-click.}
x position=42

#i[-2048;2048] ...
y position=0

#I[-180;180] Rotation:
#{You can quickly rotate the desklet with the mouse, by dragging the little buttons on its left and top sides.}
rotation=0


#F[Decorations;edit-paste]
frame_deco=

#o Choose a decoration theme for this desklet:
#{Choose 'Custom decorations' to define your own decorations below.}
decorations=default

#v
sep_deco=
#S Background image:
#{Image to be displayed below drawings, e.g. a frame. Leave empty for no image.}
bg desklet=
#e[0;1] Background transparency:
bg alpha=1
#S Foreground image:
#{Image to be displayed above the drawings, e.g. a reflection. Leave empty for no image.}
fg desklet=
#e[0;1] Foreground tansparency:
fg alpha=1

#v
sep_offset=

#i[0;256] Left offset:
#{in pixels. Use this to adjust the left position of drawings.}
left offset=0
#i[0;256] Top offset:
#{in pixels. Use this to adjust the top position of drawings.}
top offset=0
#i[0;256] Right offset:
#{in pixels. Use this to adjust the right position of drawings.}
right offset=0
#i[0;256] Bottom offset:
#{in pixels. Use this to adjust the bottom position of drawings.}
bottom offset=0

num desktop=-1

no input=false

depth rotation y=0

depth rotation x=0



#[preferences-system]
[Configuration]


#F[Applet behaviour;dialog-warning]
frame_user_mode=

#l[Tester;Developer] User Interface:
UserMode=0

#F[Auto check new Cairo-Dock versions;view-refresh]
frame_loop_version=


#b Enable the auto-check
VersionPollingEnabled=true

#i[1;1440] Delay between refreshes
#{(in minutes)}
VersionPollingTimer=60


#F[Compilation Settings;document-open]
frame_compile=

#D Dock sources folder :
#{Mandatory for many actions, must be the base folder of your cairo-dock sources. The dir that contains the cairo-dock-core and cairo-dock-plug-ins folders.}/
SourceDir=

#b Reload the dock or applet after build
BuildReload=true


#F[Commands;format-justify-fill]
frame_logs=

#s Diff editor command
DiffCommand=meld

#b Monitor application
#{Works only if you have defined "Show diff" as one of your click event.}
DiffMonitored=true


#F[Build targets;preferences-system]
frame_parts=

#U[test]
#{core, plug-ins, or an applet using its directory name}
BuildTargets=core;plug-ins;


#[preferences-system]
[Actions]


#F[Tester Behaviour;system-run]
frame_behav=

#L[No action;Show versions;Download all;Build all;Update all] Action on left-click:
TesterClickLeft=Show versions

#L[No action;Show versions;Download all;Build all;Update all] Action on middle-click:
TesterClickMiddle=Update all


#F[Developer Behaviour;system-run]
frame_dev_behav=

#L[No action;Show diff;Show versions;Grep target;Cycle target;Toggle user mode;Toggle reload action;Build target] Action on left-click:
DevClickLeft=Show diff

#L[No action;Show diff;Show versions;Grep target;Cycle target;Toggle user mode;Toggle reload action;Build target] Action on middle-click:
DevClickMiddle=Build target

#L[No action;Cycle target] Action on mouse wheel:
DevMouseWheel=Cycle target



#F[Shortkey one;system-run]
frame_shortkey1=

#k[] Show diff
ShortkeyShowDiff=

#k[] Show versions
ShortkeyShowVersions=

#k[] Next target
ShortkeyNextTarget=

#k[] Grep target
ShortkeyGrepTarget=

#k[] Open file target
#{Get clipboard content and try open the file at this location.\nIf the path is relative, it will be prefixed with the current target path.}
ShortkeyOpenFileTarget=

#k[] Build target
ShortkeyBuildTarget=



#X[Build extra;go-down]
exp_build_extra=

#s[] Build applets flags
FlagsApplets=

#s[] Dir core
DirCore=cairo-dock-core

#s[] Dir applets
DirApplets=cairo-dock-plug-ins


#s[] Sudo command
CommandSudo=gksudo

#v
sep_build_extra=

#U[] Extra sources directories.\nTrack other git directories versions.
SourceExtra=

#v
sep_debug=

#l[No;Yes] Show debug
Debug=0



#X[Display files;go-down]
exp_build_extra=


#s[] VersionDialogTemplate
VersionDialogTemplate=ShowVersionsDialog

#s[] VersionEmblemWork
VersionEmblemWork=EmblemWork.svg

#s[] VersionEmblemNew
VersionEmblemNew=EmblemNew.png

#s[] IconMissing
IconMissing=IconMissing.png
