#0.0.7
#
#[/usr/share/cairo-dock/icons/icon-icons.svg]
[Icon]

#F[Icon]
frame_maininfo=

#d Name of the dock it belongs to:
dock name=

#s[Default] Name of the icon as it will appear in its caption in the dock:
name=

#v
sep_display=

#S+[Default] Image filename:
#{Let empty to use the default one.}
icon=

#j+[0;128] Desired icon size for this applet
#{Set to 0 to use the default applet size}
icon size=0;0;

order=

#F[Cairo-Dock Update;help-browser]
frame_launchpad=

#W[Module Documentation: Update] How-to use this module.
link branch=http://glx-dock.org/ww_page.php?p=Update&lang=en

#W[Dock Git Forum] Report and help fix your problems with the development version.
link git forum=http://glx-dock.org/bg_forum.php?f=12

#W[github cairo-dock-core] Core source repository
link core=https://github.com/Cairo-Dock/cairo-dock-core

#W[github cairo-dock-plug-ins] Plug-Ins source repository
link plug-ins=https://github.com/Cairo-Dock/cairo-dock-plug-ins

#A
handbook=Update

#F[Debug;system-help]
sep_debug=

#b Show debug
Debug=false



#[/usr/share/cairo-dock/icons/icon-desklets.svg]
[Desklet]

#F[Desklet mode]
frame_desk=

#b Is detached from the dock
initially detached=false

#j+[48;512] Desklet dimensions (width x height):
#{Depending on your WindowManager, you may be able to resize this with ALT + middle-click or ALT + left-click.}
size=96;96;

#l[Normal;Keep above;Keep below;Keep on widget layer;Reserve space] Visibility:
accessibility=0

#b Should be visible on all desktops?
sticky=true

#F[Position;view-fullscreen]
frame_pos=

#b Lock position?
#{If locked, the desklet cannot be moved by simply dragging it with the left mouse button. It can still be moved with ALT + left-click.}
locked=false

#i[-2048;2048] Desklet position (x, y):
#{Depending on your WindowManager, you may be able to move this with ALT + left-click.}
x position=42

#i[-2048;2048] ...
y position=0

#I[-180;180] Rotation:
#{You can quickly rotate the desklet with the mouse, by dragging the little buttons on its left and top sides.}
rotation=0

#F[Decorations;edit-paste]
frame_deco=

#o Choose a decoration theme for this desklet:
#{Choose 'Custom decorations' to define your own decorations below.}
decorations=default

#v
sep_deco=

#S Background image:
#{Image to be displayed below drawings, e.g. a frame. Leave empty for no image.}
bg desklet=

#e[0;1] Background transparency:
bg alpha=1

#S Foreground image:
#{Image to be displayed above the drawings, e.g. a reflection. Leave empty for no image.}
fg desklet=

#e[0;1] Foreground tansparency:
fg alpha=1

#v
sep_offset=

#i[0;256] Left offset:
#{in pixels. Use this to adjust the left position of drawings.}
left offset=0

#i[0;256] Top offset:
#{in pixels. Use this to adjust the top position of drawings.}
top offset=0

#i[0;256] Right offset:
#{in pixels. Use this to adjust the right position of drawings.}
right offset=0

#i[0;256] Bottom offset:
#{in pixels. Use this to adjust the bottom position of drawings.}
bottom offset=0

num desktop=-1

no input=false

depth rotation y=0

depth rotation x=0



#[preferences-system]
[Configuration]

#F[Applet behaviour;dialog-warning]
frame_user_mode=

#l[Tester;Developer] User Interface:
UserMode=0

#F[Auto check new Cairo-Dock versions;network-transmit-receive]
frame_loop_version=

#b Enable the auto-check:
VersionPollingEnabled=true

#i[1;1440] Delay between refreshes:
#{(in minutes)}
VersionPollingTimer=60

#i[0;120] Dialog duration:
#{in seconds. Set 0 to have never-ending dialogs.}
DialogDuration=30

#F[Compilation Settings;document-open]
frame_compile=

#D[* MANDATORY FOR BUILD ACTIONS *] Dock sources folder:
#{Mandatory for many actions, must be the base folder of your cairo-dock sources. The dir that contains the cairo-dock-core and cairo-dock-plug-ins folders.}/
SourceDir=

#b Reload the dock or applet after build:
BuildReload=true

#F[Commands;format-justify-fill]
frame_logs=

#S Diff editor command:
DiffCommand=meld

#b Monitor application:
#{Works only if you have defined "Show diff" as one of your click event.}
DiffMonitored=true

#b Diff vs stash:
#{Activate to show the diff with your current stash instead of full diff.}
DiffStash=false

#v
sep_commands=

#S[Default] Open source file:
#{Activated from remote: cdc remote SourceCodeOpenFile path/to/file}
CmdOpenSource=

#F[Build targets;applications-development]
frame_parts=

#U[test]
#{core, plug-ins, or an applet using its directory name}
BuildTargets=core;plug-ins;

#X[Build extra;folder]
exp_build_extra=

#s Build applets flags
FlagsApplets=

#s Dir core name
DirCore=cairo-dock-core

#s Dir applets name
DirApplets=cairo-dock-plug-ins

#s Sudo command
CommandSudo=gksudo

#v
sep_build_extra=

#U[] Extra sources directories.
#{Track other git directories versions.}
SourceExtra=

#X[Display files;preferences-desktop-theme]
exp_display_files=

#S[Default] Version dialog template:
#{You can edit the dialog templates file, and change its location to secure it.
#It can either be the name of a file in the templates subdir of the applet (without its .tmpl)
#or the full path to a file located where you want.}/
VersionDialogTemplate=

#S[Default] Version Emblem Work
VersionEmblemWork=

#S[Default] Version Emblem New
VersionEmblemNew=

#S[Default] Icon Missing
IconMissing=



#[preferences-system]
[Actions]

#F[Tester Behaviour;input-mouse]
frame_behav=

#L[No action;Show versions;Download all;Build all;Update all] Action on left-click:
TesterClickLeft=Show versions

#L[No action;Show versions;Download all;Build all;Update all] Action on middle-click:
TesterClickMiddle=Update all

#F[Developer Behaviour;input-mouse]
frame_dev_behav=

#L[No action;Show diff;Show versions;Grep target;Cycle target;Toggle user mode;Toggle reload action;Build target] Action on left-click:
DevClickLeft=Show diff

#L[No action;Show diff;Show versions;Grep target;Cycle target;Toggle user mode;Toggle reload action;Build target] Action on middle-click:
DevClickMiddle=Build target

#L[No action;Cycle target] Action on mouse wheel:
DevMouseWheel=Cycle target

#F[Shortkeys;preferences-desktop-keyboard]
frame_shortkey1=

#k Show diff
ShortkeyShowDiff=

#k Show versions
ShortkeyShowVersions=

#k Next target
ShortkeyNextTarget=

#k Grep target
ShortkeyGrepTarget=

#k Open file target
#{Get clipboard content and try open the file at this location.
#If the path is relative, it will be prefixed with the current target path.}
ShortkeyOpenFileTarget=

#k Build target
ShortkeyBuildTarget=
