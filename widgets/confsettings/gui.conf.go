package confsettings

import (
	"bytes"
	"compress/gzip"
	"io"
)

// guiConfDefault returns raw, uncompressed file data.
func guiConfDefault() []byte {
	gz, err := gzip.NewReader(bytes.NewBuffer([]byte{
		0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x00, 0xff, 0x6c, 0x92,
		0x31, 0x6f, 0x9c, 0x40, 0x10, 0x85, 0x7b, 0x7e, 0xc5, 0x44, 0x57, 0xd8,
		0x27, 0x9d, 0xb1, 0xd3, 0x26, 0x72, 0xe5, 0x58, 0x96, 0xa5, 0x14, 0x96,
		0x6c, 0x57, 0x51, 0x8a, 0x85, 0x1d, 0x8e, 0x15, 0xcb, 0x2e, 0x9a, 0x1d,
		0x4c, 0x4e, 0x51, 0xfe, 0x7b, 0xde, 0x70, 0xc8, 0x71, 0x11, 0x74, 0x0d,
		0x07, 0xfb, 0xe6, 0xfb, 0xde, 0xb0, 0xbb, 0xa9, 0x6f, 0xea, 0xcf, 0xd5,
		0x6e, 0xbb, 0xe8, 0xa5, 0x0f, 0x85, 0xf0, 0x73, 0xd4, 0xe6, 0xd4, 0x51,
		0x17, 0x22, 0x53, 0x97, 0x85, 0xee, 0x5c, 0x90, 0x7c, 0xf5, 0x2d, 0xb7,
		0xc3, 0x81, 0x84, 0x23, 0xbb, 0xc2, 0x9e, 0xe6, 0xe4, 0x59, 0x48, 0x7b,
		0xa6, 0x87, 0xa7, 0xef, 0xf5, 0xee, 0xfd, 0xfa, 0x17, 0xf7, 0xa8, 0x16,
		0x36, 0x39, 0xb1, 0xd7, 0x9b, 0x13, 0xb5, 0x6b, 0x8c, 0x47, 0x0c, 0x69,
		0x26, 0x37, 0x6b, 0x1e, 0x9d, 0x86, 0xd6, 0xc5, 0x78, 0xa2, 0x23, 0x27,
		0x16, 0xa7, 0x4c, 0x2e, 0x91, 0x9b, 0x26, 0xc9, 0x93, 0x04, 0xbb, 0x7d,
		0x78, 0x7d, 0x3c, 0xfc, 0x2f, 0xbb, 0x64, 0xf2, 0x39, 0x5d, 0x28, 0x8d,
		0x5c, 0xc0, 0x9c, 0x10, 0x18, 0xf4, 0x40, 0xfc, 0xab, 0xe5, 0x09, 0x63,
		0x3b, 0x3a, 0xe5, 0x99, 0x86, 0x94, 0x17, 0x5a, 0x7a, 0xa7, 0x76, 0x77,
		0x21, 0x8c, 0x23, 0x21, 0x1d, 0xe9, 0x13, 0x7d, 0xbd, 0xda, 0x7f, 0x08,
		0xad, 0x7e, 0x60, 0x0a, 0x3d, 0xb3, 0x2a, 0x9e, 0x96, 0x9f, 0x55, 0xb5,
		0x2b, 0x74, 0xef, 0x83, 0xc2, 0xdc, 0xec, 0x4d, 0xb1, 0xb8, 0x37, 0x46,
		0x29, 0xe3, 0xe8, 0x92, 0xa7, 0x2f, 0xd5, 0xee, 0xf7, 0x0b, 0xfe, 0x4c,
		0xbc, 0x18, 0x9f, 0x49, 0x16, 0x0d, 0x31, 0xc2, 0x2a, 0xdb, 0x24, 0x8c,
		0x00, 0x4e, 0x7e, 0x63, 0x59, 0x24, 0xa8, 0x1d, 0xee, 0x18, 0x8a, 0x96,
		0x63, 0xbd, 0x86, 0x63, 0x4d, 0x4f, 0x6b, 0x89, 0xa4, 0x5c, 0x14, 0x2a,
		0x23, 0x1e, 0xf4, 0x2e, 0x1d, 0x19, 0xd5, 0x23, 0x5f, 0x78, 0xca, 0xa2,
		0x00, 0x67, 0x1c, 0x11, 0x78, 0xd1, 0x92, 0x65, 0x28, 0x04, 0x96, 0x94,
		0xb5, 0xfe, 0x53, 0xad, 0x34, 0xbc, 0x12, 0xde, 0x8e, 0x1c, 0x7d, 0x05,
		0xe4, 0x86, 0xee, 0x93, 0x6b, 0xe2, 0x86, 0x7a, 0xb9, 0x38, 0x49, 0xe6,
		0xaa, 0xb6, 0xd2, 0x16, 0xa5, 0x36, 0xc2, 0x6e, 0x30, 0x3a, 0xd9, 0x20,
		0xf6, 0xb0, 0x78, 0xb6, 0xd1, 0x4b, 0xf0, 0x47, 0x56, 0x8c, 0x46, 0x41,
		0x67, 0x8f, 0x39, 0x19, 0x18, 0xfb, 0xeb, 0x90, 0xe0, 0x3c, 0x45, 0x56,
		0xbe, 0x1e, 0x43, 0x29, 0x08, 0xac, 0xe9, 0x15, 0xdc, 0xe7, 0x46, 0x85,
		0xf2, 0x92, 0x48, 0x42, 0x19, 0xe8, 0xb2, 0x99, 0xf5, 0x3c, 0x2b, 0x31,
		0xfb, 0x62, 0xfe, 0xcd, 0x59, 0x0f, 0xab, 0x77, 0x9b, 0xe3, 0x84, 0xf6,
		0x75, 0x5f, 0xd3, 0x5d, 0xcf, 0xf8, 0x04, 0x96, 0xa0, 0xfd, 0xda, 0x89,
		0x0f, 0x5d, 0xb7, 0xd9, 0xc0, 0x39, 0xb4, 0xbd, 0x7d, 0x32, 0xe0, 0xc9,
		0xdd, 0x87, 0xca, 0xd6, 0x7d, 0x9a, 0xc7, 0x56, 0xe6, 0x0c, 0x8a, 0x86,
		0xb1, 0x1e, 0x7e, 0xef, 0x63, 0xd5, 0xf7, 0xb7, 0x9d, 0x8b, 0x85, 0xab,
		0xea, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xf3, 0x34, 0x0f, 0xd5, 0xdc,
		0x02, 0x00, 0x00,
	}))

	if err != nil {
		panic("Decompression failed: " + err.Error())
	}

	var b bytes.Buffer
	io.Copy(&b, gz)
	gz.Close()

	return b.Bytes()
}
